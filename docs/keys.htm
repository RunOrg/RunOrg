<page title="Keys" parent="index.htm" />
<doc>
  A **key** means a cryptographic key, used for HMAC-based
  authentication of certain requests. Keys are used to allow third party
  software to communicate with the RunOrg API through an insecure
  channel, such as through tokens handled in the client browser.
  
  For instance, you can use keys to [securely authenticate](/people/hmac.htm) 
  an user that is already logged into another service you control:
  
  - Dave, the __developer__, generates a new **key** (a random sequence
    of bytes) and registers it with API using the [create
    key](/keys/create.htm) endpoint. This yields a **key-id**.
  - Dave then stores both the key and the key-id in MyTestApp (his own
    application).
  - Alice, the __user__, connects to MyTestApp.  
  - MyTestApp creates an **assertion** that says "Until date X, assume
    the holder of this assertion to be Alice", and computes a
    cryptographic **proof** by applying `HMAC-SHA1(key,assertion)`.
  - Alice receives the assertion, the proof and the key-id from
    MyTestApp, and sends it to RunOrg.
  - RunOrg uses the key-id to retrieve the key from its internal database,	
    computes `HMAC-SHA1(key,assertion)` and compares it with the provided
    proof. If they match, then it is certain that the assertion was 
    generated by MyTestApp, and so RunOrg authenticates Alice. 	    
  - Alice receives a RunOrg token and can start using the API.

  It is recommended to keep one API key for each third party
  application, and to disable individual keys if they are leaked or
  become too old.

  For safety reasons, it is impossible to access the keys registered
  with RunOrg. If you lose a key, please delete the associate key-id
  and create a new key. 
</doc>
<list tags="methods:key" />
