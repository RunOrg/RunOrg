<page title="Authenticate using Mozilla Persona"
      api="POST /db/{db}/people/auth/persona" 
      tags="methods:person methods:auth"
      parent="people.htm" />
<doc for="api">
  Processes a [Mozilla Persona assertion](https://developer.mozilla.org/en-US/Persona/The_navigator.id_API)
  and authenticates the corresponding person based on the email address contained
  in the assertion. 

  If no such person exists, a new person is created using the email address. 

  # Request

  The request body contains exactly one field:
</doc>
<fields for="api">
  assertion | <string> | The assertion returned by Mozilla Persona. 
</field>
<doc for="api">

  The assertion validator expects the audience to be the [database persona audience](/db/audience.js).
  If no audience was configured, this will be `https://api.runorg.com`. 

  # Response

  Always `202 Accepted`: this is a [sync-idempotent](/concepts/sync-idempotent.htm) endpoint.

  The response contains a single field: 
</doc>
<fields for="api">
  token | <token> | An [authentication token](/auth/token.htm).
  self  | <person> | The [short profile](/people/person.htm) of the authenticated 
                     person.
  at    | <clock> | The time when the person (if it was created by this request) will be present
	            in the database. The authentication token is always available straight away, 
	            regardless of this clock.
</fields>
<doc for="api">
  # Examples
</doc>
<example type="api" caption="Example request">
   POST /db/0Et4X0016om/people/auth/persona
   Content-Type: application/json

   { "assertion": "eyJhbGciOiJSUzI1NiJ9.eyJwdWJs..." }
</example>
<example type="api" caption="Example response">
   202 Accepted 
   Content-Type: application/json

   { "token": "7Rq03AsR92W",
     "self": { 
       "id" : "0Et9j0026rO",
       "label" : "Victor Nicollet",
       "gender" : "M", 
       "pic" : "https://www.gravatar.com/avatar/648e25e4372728b2d3e0c0b2b6e26f4e" },
     "at": {"1":23} }
</example>
<doc for="api">
  # Errors

  ## Returns `404 Not Found`
  - ... if database `{db}` does not exist
  
  ## Returns `400 Bad Request` 
  - if the assertion is not valid.

  # Access restrictions
 
  None: anyone can attempt to authenticate. 
</doc>
